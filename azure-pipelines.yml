
name: JfrogReportTest.$(Date:yyyyMMdd).$(Rev:rr)
trigger: none

parameters:
- name: enabled
  type: boolean
  default: true


jobs:
  - job: npm_install_and_nuget_restore_from_Jfrog_with_upload_buildinfo
    #choose windows hosted agent      
    displayName: npm install and nuget restore from Jfrog with upload buildinfo
    continueOnError: false
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      buildConfiguration: 'Release'
      
    steps:
#    - task: NodeTool@0
#      displayName: Node install
#      inputs:
#        versionSpec: '14.15.1' # The version we're installing
#      enabled: ${{ parameters.enabled }}
          
#    - task: Bash@3
#      inputs:
#        targetType: 'inline'
#        script: |          # Write your commands here
          # echo 'npm packages location'
          # sudo find / -name "react"
#          npm install react react-dom

#    - task: Npm@1
#      inputs:
#        command: 'install'

#    - task: ArtifactoryNpm@2
#      inputs:
#        command: 'install'
#        artifactoryService: 'JfrogArtifactory'
#        sourceRepo: 'npm'
#        collectBuildInfo: true
#        threads: '1'
#        buildName: '$(Build.DefinitionName)'
#        buildNumber: '$(Build.BuildNumber)'

#    - task: Npm@1
#      inputs:
#        command: 'install'

#    - task: ArtifactoryNpm@2
#      enabled: ${{ parameters.enabled }}
#      displayName: npm install from artifactory
#      inputs:
#        command: 'install'
#        artifactoryService: 'JfrogArtifactory'
#        sourceRepo: 'npm'
#        collectBuildInfo: true
#        threads: '1'
#        buildName: 'jfrog-build-info-test'
#        buildNumber: '$(Build.BuildNumber)' 
#      env:
#        HTTPS_PROXY: $(https_proxy)

#    - task: ArtifactoryToolsInstaller@1
#      displayName: 'Install Jfrog Tools'
#      inputs:
#        artifactoryService: 'JfrogArtifactory'
#        cliInstallationRepo: 'jfrog-cli'
#      #Make sure to set the proxy in the environment. Otherwise the task will fail
#      env:
#        HTTPS_PROXY: "http://40.87.149.189:80"

#    - task: Bash@3
#      inputs:
#        targetType: 'inline'
#        script: |          
#          http_proxy=40.87.149.189 wget https://releases.jfrog.io/artifactory/jfrog-cli/v1/1.46.3/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64
#          # sudo find / -name "react"

#    - task: ArtifactoryDotnetCore@1
#      #enabled: ${{ parameters.enabled }}
#      displayName: "dotnet restore from Jfrog Artifactory for all projects in .sln"
#      inputs:
#        artifactoryService: "JfrogArtifactory"
#        targetResolveRepo: "nuget"
#        command: restore
#        rootPath: '$(Build.SourcesDirectory)/test.csproj'
#        arguments: '-r linux-x64'
#        collectBuildInfo: true
#        buildName: 'jfrog-build-info-test'
#        buildNumber: '$(Build.BuildNumber)'
#        verbosityRestore: Normal
#      env:
#        HTTPS_PROXY: "http://52.164.215.137:80"

    - task: ArtifactoryNuGet@2
      inputs:
        command: 'restore'
        arguments: '-r linux-x64'
        artifactoryService: 'JfrogArtifactory'
        targetResolveRepo: 'nuget'
        solutionPath: '**/*.sln'
        collectBuildInfo: true
        buildName: '$(Build.DefinitionName)'
        buildNumber: '$(Build.BuildNumber)'
      env:
        HTTPS_PROXY: "http://52.164.215.137:80"

    - task: ArtifactoryPublishBuildInfo@1
      #enabled: ${{ parameters.enabled }}
      displayName: "Send build info to JFrog"
      inputs:
        artifactoryService: "JfrogArtifactory"
        buildName: 'jfrog-build-info-test'
        buildNumber: '$(Build.BuildNumber)'
      env:
        HTTPS_PROXY: "http://52.164.215.137:80"

#    - task: Bash@3
#      inputs:
#        targetType: 'inline'
#        script: |
          # Write your commands here
          
          # echo 'npm packages location'
          # sudo find / -name "react"
          #echo 'nuget packages location'
          
          #echo 'locating bootstrap'
          #sudo find / -name "bootstrap"
          
          #echo 'locating jQuery'
          #sudo find / -name "jQuery"
          
          #echo 'locating Microsoft.Bcl'
          #sudo find / -name "Microsoft.Bcl"
          
          #echo 'locating Microsoft.Net.Http'
          #sudo find / -name "Microsoft.Net.Http"
          
          #echo 'locating Microsoft.Bcl.Build'
          #sudo find / -name "Microsoft.Bcl.Build"
          
          #echo 'locating Newtonsoft.Json'
          #sudo find / -name "Newtonsoft.Json"
          
          #echo 'locating NUnit'
          #sudo find / -name "NUnit"

          #echo 'locating popper.js'
          #sudo find / -name "popper.js"
